http://wiki.swoole.com/wiki/page/163.html Reactor、Worker、Task的关系

1、master（首发请求 多线程）
    链接的管理者，负责收发请求，当收到请求后，分配给manager
    (1)reactor:http://wiki.swoole.com/wiki/page/281.html reactor_num
        master发布给manager任务的工具
    (2)heartbeat:http://wiki.swoole.com/wiki/page/283.html heartbeat_check_interval
        心跳检测，防止客户端因异常退出时未关闭链接，每多少秒检测一次，自动关闭链接

2、manager http://wiki.swoole.com/wiki/page/348.html
    通过manager进程fork管理worker/task

3、worker http://wiki.swoole.com/wiki/page/67.html
        业务逻辑处理部分，可以指定max_request，当处理完最大请求数的任务后，自动关闭链接，
    并通知manager,此时manager重新拉起新的worker进程,防止内存泄露。
        同时把任务下发给task处理 http://wiki.swoole.com/wiki/page/134.html

4、pstree -a|grep Server.php(文件名称或进程名称)
    以树状图的形式罗列出所有的进程，顺序为 master->manager->work or task
    配合ps aux|grep Server.php 找到进程id 使用“strace -p 进程id” 查看进程的使用状态




代码热更新：在命令台执行，ps aux|grep 服务文件进程名，找到manager的进程id
执行命令，kill USR1 managerid，就可以，热更新只能更新worker



mysql相关：
http://guangla.lofter.com/post/1d337f35_8890290
http://wiki.swoole.com/wiki/page/325.html
http://www.justwinit.cn/post/8418/
http://www.tuicool.com/articles/Y3QZV3A

1、event loop(参考swoole_event_add方法的介绍)
    reactor线程底层实现epoll实例(阻塞监听),当有客户端描述符由master转发给reactor的时候,
reactor会给这个描述符注册epoll事件(绑定写事件,读事件(callback)),然后把请求通过管道(manager来管理),
发送到worker或task进程处理,当返回结果的时候,通过管道(manager来管理),发送给epoll
(epoll会不停的读取数据),epoll接收到数据,通知reactor,再通知给客户端