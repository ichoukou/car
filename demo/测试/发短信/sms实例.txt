########业务处理：（记录发送信息可以不处理，最好是记录下）########

/* 发送手机短信验证码到手机 */
function action_send_mobile_code()
{
    // 获取全局变量
    $user = $GLOBALS['user'];
    $_CFG = $GLOBALS['_CFG'];
    $_LANG = $GLOBALS['_LANG'];
    $smarty = $GLOBALS['smarty'];
    $db = $GLOBALS['db'];
    $ecs = $GLOBALS['ecs'];
    $user_id = $_SESSION['user_id'];

    /* 载入语言文件 */
    require_once(ROOT_PATH . 'languages/' . $_CFG['lang'] . '/user.php');

    require_once(ROOT_PATH . 'includes/lib_validate_record.php');

    $mobile_phone = trim($_REQUEST['mobile_phone']);

    if (empty($mobile_phone)) {
        exit("手机号不能为空");
        return;
    } else if (!is_mobile_phone($mobile_phone)) {
        exit("手机号格式不正确");
        return;
    } else if (check_validate_record_exist($mobile_phone)) {
        // 获取数据库中的验证记录
        $record = get_validate_record($mobile_phone);

        /**
         * 检查是过了限制发送短信的时间
         */
        $last_send_time = $record['last_send_time'];
        $expired_time = $record['expired_time'];
        $create_time = $record['create_time'];
        $count = $record['count'];

        // 每天每个手机号最多发送的验证码数量
        $max_sms_count = 10;
        // 发送最多验证码数量的限制时间，默认为24小时
        $max_sms_count_time = 60 * 60 * 24;

        if ((time() - $last_send_time) < 60) {
            echo("每60秒内只能发送一次短信验证码，请稍候重试");
            return;
        } else if (time() - $create_time < $max_sms_count_time && $record['count'] > $max_sms_count) {
            echo("您发送验证码太过于频繁，请稍后重试！");
            return;
        } else {
            $count++;
        }
    }

//    require_once(ROOT_PATH . 'includes/lib_passport.php');

    // 设置为空
    $_SESSION['mobile_register'] = array();

    require_once(ROOT_PATH . 'sms/sms.php');

    // 生成6位短信验证码
    $mobile_code = rand_number(6);
    // 短信内容
//    $content = sprintf($_LANG['mobile_code_template'], $GLOBALS['_CFG']['shop_name'], $mobile_code, $GLOBALS['_CFG']['shop_name']);

    /* 发送手机验证码 */
//    $result = true;//本地关闭短信验证
    $send_time = gmtime();
    $result = sendSMS($mobile_phone, $mobile_code, 'register');//服务器开启短信验证
    $return_time = gmtime();
    if ($result) {
        $return_type = '1';
        if (!isset($count)) {
            $ext_info = array(
                "count" => 1
            );
        } else {
            $ext_info = array(
                "count" => $count
            );
        }

        // 保存手机号码到SESSION中
        $_SESSION[VT_MOBILE_REGISTER] = $mobile_phone;
        // 保存验证信息
        save_validate_record($mobile_phone, $mobile_code, VT_MOBILE_REGISTER, time(), time() + 10 * 60, $ext_info);
        echo 'ok';
    } else {
        $return_type = '2';
        echo '短信验证码发送失败';
    }

    //记录发送短信信息
    $sql = "INSERT INTO " . $ecs->table('sms') . " (mobile_phone, sms_type, mobile_code, send_time, return_time, return_type)
                VALUES ($mobile_phone, '1', $mobile_code, $send_time, $return_time, $return_type)";
    $db->query($sql);

}

########短信记录表结构：########

drop table if exists ecs_sms;

/*==============================================================*/
/* Table: ecs_sms                                               */
/*==============================================================*/
create table ecs_sms
(
   sms_id               mediumint(8) not null auto_increment,
   mobile_phone         varchar(20),
   sms_type             char(2) comment '1：注册  2：找回密码',
   mobile_code          int(10),
   send_time            int(10),
   return_time          int(10),
   return_type          char(2) comment '1：成功  2：失败',
   primary key (sms_id)
);



########发短信调用方法：（修改$text内容即可）########

function sendSMS ($mobile, $mobile_code, $content_type = '', $time = '', $mid = '')
{
	if($content_type == 'register') {
		$text =  '尊敬的用户，您的注册验证码是%s，10分钟内有效。如非本人操作请忽略！【买着网】';

	} elseif($content_type == 'find_pwd') {
		$text = '尊敬的用户，您正在执行找回密码操作，验证码是%s，10分钟内有效。如非本人操作请忽略！【买着网】';
	}
	$content = iconv("UTF-8","GBK", $text);	//发送内容
	$uid = 'plt01';	//用户账号
	$pwd = '123456';	//用户密码
	$http = 'http://61.156.38.47:8080/CPDXT/SendSms';		//发送地址

	$data = array(
		'commandID'=>3,					//发送命令
		'username'=>$uid,				//用户账号
		'password'=>$pwd,				//密码
		'mobile'=>$mobile,				//被叫号码
		'content'=>sprintf($content, $mobile_code),				//内容
	);
	$re = postSMS($http, $data); // POST方式提交

	if(strpos ($re, "return=0") == 0 )
	{
		return true;
	}
	else
	{
		return false;
	}
}



function postSMS ($url, $data = '')
{
	$row = parse_url($url);
	$host = $row['host'];
	$port = $row['port'] ? $row['port']:8080;
	$file = $row['path'];

	while(list($k, $v) = each($data))
	{
		$post .= rawurlencode($k) . "=" . rawurlencode($v) . "&"; // 转URL标准码
	}

	$post = substr($post, 0, - 1);
	$len = strlen($post);
	$fp = @fsockopen($host, $port, $errno, $errstr, 10);

	if(! $fp)
	{
		return "$errstr ($errno)\n";
	}
	else
	{
		$receive = '';
		$out = "POST $file HTTP/1.1\r\n";
		$out .= "Host: $host\r\n";
		$out .= "Content-type: application/x-www-form-urlencoded\r\n";
		$out .= "Connection: Close\r\n";
		$out .= "Content-Length: $len\r\n\r\n";
		$out .= $post;
		fwrite($fp, $out);
		while(! feof($fp))
		{
			$receive .= fgets($fp, 128);
		}
		fclose($fp);
		$receive = explode("\r\n\r\n", $receive);
		unset($receive[0]);
		return implode("", $receive);
	}
}